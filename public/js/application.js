// Generated by CoffeeScript 1.3.3
(function() {
  var app;

  app = {
    initialize: function() {
      app.consoleHack();
      app.setupStars();
      app.setupBucketForm();
      app.setupManifest();
      return app.setupPusher();
    },
    consoleHack: function() {
      if (typeof console === "undefined") {
        return window.console = {
          log: function() {}
        };
      }
    },
    setupStars: function() {
      console.log("setting up STARS !!!!!!");
      return $(".star").live('click', function(e) {
        e.preventDefault();
        return app.notifyStar(this);
      });
    },
    notifyStar: function(star) {
      var _this = this;
      return $.ajax({
        type: "POST",
        url: "/stars.json",
        dataType: "json",
        contentType: "application/json",
        data: JSON.stringify({
          "tweet_id": $(star).parents('.tweet').attr('id')
        }),
        success: function(data, textStatus) {
          return $(star).parents('.tweet').addClass("starred");
        }
      });
    },
    setupBucketForm: function() {
      return $('#new_bucket_form').ajaxForm(function(data, textStatus) {
        $(':input', '#new_bucket_form').not(':button, :submit, :reset, :hidden').val('');
        return $('.mf_list li').remove();
      });
    },
    setupManifest: function() {
      return $('#bucket_words').manifest();
    },
    setupPusher: function() {
      var apiKey, pusher, result, tweetsChannel;
      apiKey = $('#pusher_api').html();
      pusher = new Pusher(apiKey);
      result = "";
      result += "options: " + pusher['options'] + "\n";
      result += "path: " + pusher['path'] + "\n";
      result += "key: " + pusher['key'] + "\n";
      result += "channels: " + pusher['channels'] + "\n";
      result += "global_channel: " + pusher['global_channel'] + "\n";
      result += "secure: " + pusher['secure'] + "\n";
      result += "connected: " + pusher['connected'] + "\n";
      result += "retry_counter: " + pusher['retry_counter'] + "\n";
      result += "encrypted: " + pusher['encrypted'] + "\n";
      result += "connection " + pusher.connection;
      alert(result);
      tweetsChannel = pusher.subscribe("tweets");
      return tweetsChannel.bind("tweet", function(tweet) {
        return alert(tweet.text);
      });
    },
    create_word_spans: function(words) {
      var str, word, _i, _len;
      str = "";
      for (_i = 0, _len = words.length; _i < _len; _i++) {
        word = words[_i];
        str += "<span class='word'>" + word + "</span>";
      }
      return str;
    }
  };

  $(function() {
    return app.initialize();
  });

}).call(this);
